

#数据库配置
spring.datasource.url=jdbc:mysql://localhost:3306/android?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username=root
#这里的密码是本地数据库的密码，当上传到服务器上的时候。在打包war之前要把密码改成83862973
spring.datasource.password=83862973
#spring.datasource.password=530454062

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 修改端口号 避免有时候在服务器上有多个项目时端口号冲突
 server.port=8082

#springboot上传文件的目录
#spring.http.multipart.location=
#文件上传大小限制
spring.http.multipart.max-file-size=7MB
spring.http.multipart.max-request-size=7MB

#springboot SSL配置
server.tomcat.protocol_header=x-forwarded-proto
server.use-forward-headers=true
server.address=127.0.0.1

#myabtis全局基本配置
mybatis.config-location=classpath:mybatis-config.xml

#使用mybatis XML 方式写SQL 就要添加以下两行参数
#type-aliases-package指定Datesource
#使用type-aliases-package，需要配合自动扫描Mappers使用，需要在Mapper接口上标注@Mapper，否则失败
mybatis.type-aliases-package=com.lee.android.entity

#mapper-locations这个配置参数当mapper xml与mapper class不在同一个目录时添加，指定与mapper对应的xml文件在哪里
mybatis.mapper-locations=classpath:mapper/*.xml

#上传文件大小限制，默认1MB
spring.http.multipart.maxFileSize=20Mb
spring.http.multipart.maxRequestSize=20Mb


#Spring Security配置
#关闭访问页面时要输账号密码，这是Spring Security的默认配置，注释掉下面这句话就是开启了Spring Security
security.basic.enabled = false
#关闭js-security-browser中的spring.session依赖
spring.session.store-type=none

#thymeleaf配置
#Spring-boot使用thymeleaf时默认是有缓存的，即你把一个页面代码改了不会刷新页面的效果
#你必须重新运行spring-boot的main()方法才能看到页面更改的效果。
#我们可以把thymeleaf的缓存关掉，添加以下代码
spring.thymeleaf.cache=false
#解决thyemleaf对结束符严格要求的限制，同时需要引入依赖nekohtml
spring.thymeleaf.mode=LEGACYHTML5

#devtools热部署，设置为false就禁用，默认是true
spring.devtools.restart.enabled=false